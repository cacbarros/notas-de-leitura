---
title: "Fun√ß√µes Geradoras de Momentos"
lang: pt
language:
  toc-title: "√çndice"
filters:
  - watermark
watermark:
  text: "RASCUNHO"
  size: 1.5
  angle: 30
  color: "#FF0000"
  opacity: 0.1
description: "Introdu√ß√£o √†s fun√ß√µes geradoras de momentos (MGF) e sua utilidade na estat√≠stica te√≥rica."
date: 2025-05-08
categories: ['Estat√≠stica', 'Matem√°tica']
format:
  html: default
  pdf: default
toc: true
code-fold: true
bibliography: artigo3.bib
csl: apa.csl
nocite: "@*"
reference-title: "Refer√™ncias"
---

::: {.content-visible when-format="html"}
<div style="display: flex; gap: 1rem; margin-bottom: 1rem;">
  <a href="./index.pdf" target="_blank" class="btn btn-primary">üìÑ Baixar PDF</a>
  <button onclick="window.print()" class="btn btn-outline-secondary">üñ®Ô∏è Imprimir</button>
</div>
:::

<div style="margin-top: 2rem;"></div>


# Artigo 3 - Fun√ß√µes Geradoras de Momentos

```{python}
import sympy as sp
t = sp.Symbol('t')
valores = [1, 2, 3]
probs = [0.2, 0.5, 0.3]
mgf = sum(p * sp.exp(t * v) for v, p in zip(valores, probs))
mgf_simplificada = sp.simplify(mgf)
mgf_simplificada
```

```{python}
import numpy as np
import matplotlib.pyplot as plt
t_vals = np.linspace(-1, 1, 200)
mgf_vals = 0.2*np.exp(t_vals*1) + 0.5*np.exp(t_vals*2) + 0.3*np.exp(t_vals*3)

plt.plot(t_vals, mgf_vals, label='MGF')
plt.title("Fun√ß√£o Geradora de Momentos")
plt.xlabel("t")
plt.ylabel("M_X(t)")
plt.grid(True)
plt.legend()
plt.show()
```