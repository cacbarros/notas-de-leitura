---
title: "Opera√ß√µes com Matrizes"
lang: pt
language:
  toc-title: "√çndice"
filters:
  - watermark
watermark:
  text: "RASCUNHO"
  size: 1.5
  angle: 30
  color: "#FF0000"
  opacity: 0.1
description: "Introdu√ß√£o √†s opera√ß√µes b√°sicas com matrizes: soma, multiplica√ß√£o e determinantes."
date: 2025-05-08
categories: ['√Ålgebra Linear', 'Matem√°tica']
format:
  html: default
  pdf: default
toc: true
code-fold: true
execute:
  echo: true
  warning: false
  message: false
  eval: true
bibliography: artigo2.bib
csl: apa.csl
nocite: "@*"
reference-title: "Refer√™ncias"
---

::: {.content-visible when-format="html"}
<div style="display: flex; gap: 1rem; margin-bottom: 1rem;">
  <a href="./index.pdf" target="_blank" class="btn btn-primary">üìÑ Baixar PDF</a>
  <button onclick="window.print()" class="btn btn-outline-secondary">üñ®Ô∏è Imprimir</button>
</div>
:::


<div style="margin-top: 2rem;"></div>

# Matrizes

Matrizes s√£o estruturas fundamentais para representar e resolver sistemas lineares e transforma√ß√µes.

## Exemplo

```{python}
import sympy as sp

A = sp.Matrix([[1, 2], [3, 4]])
B = sp.Matrix([[2, 0], [1, 2]])

soma = A + B
produto = A * B
det_A = A.det()

soma, produto, det_A
```

Gr√°fico: representa√ß√£o matricial de uma transforma√ß√£o linear

```{python}
import numpy as np
import matplotlib.pyplot as plt

A = np.array([[2, 0], [0, 1]])
grid = np.array([[x, y] for x in np.linspace(-2, 2, 10) for y in np.linspace(-2, 2, 10)])

transformed = grid @ A.T
plt.quiver(grid[:, 0], grid[:, 1], transformed[:, 0] - grid[:, 0], transformed[:, 1] - grid[:, 1],
           angles='xy', scale_units='xy', scale=1, color='blue')
plt.axhline(0, color='grey')
plt.axvline(0, color='grey')
plt.title("Transforma√ß√£o Linear com Matriz A")
plt.grid(True)
plt.axis("equal")
plt.show()
```

## Refer√™ncias